{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\ReactProject\\\\src\\\\pages\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport { useFetch } from \"../hooks/useFetch\";\nimport { useTitle } from \"../hooks/useTitle\";\nimport { Card } from \"../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieList = _ref => {\n  _s();\n  let {\n    apiPath,\n    title\n  } = _ref;\n  const {\n    data: movies,\n    loading,\n    error\n  } = useFetch(apiPath);\n  useTitle(title);\n\n  // Handle loading and error states\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading movies...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }, this);\n\n  // Ensure movies is an array before calling .map()\n  if (!Array.isArray(movies) || movies.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"max-w-7xl mx-auto py-7\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start flex-wrap other:justify-evenly\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n          movie: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"r2LVDxn1vosJKE/T5a4hZMQ7NwY=\", false, function () {\n  return [useFetch, useTitle];\n});\n_c = MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useFetch","useTitle","Card","jsxDEV","_jsxDEV","MovieList","_ref","_s","apiPath","title","data","movies","loading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","className","map","movie","id","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/ReactProject/src/pages/MovieList.js"],"sourcesContent":["import { useFetch } from \"../hooks/useFetch\";\r\nimport { useTitle } from \"../hooks/useTitle\";\r\nimport { Card } from \"../components\";\r\n\r\nexport const MovieList = ({ apiPath, title }) => {\r\n  const { data: movies, loading, error } = useFetch(apiPath);\r\n  useTitle(title);\r\n\r\n  // Handle loading and error states\r\n  if (loading) return <p>Loading movies...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  // Ensure movies is an array before calling .map()\r\n  if (!Array.isArray(movies) || movies.length === 0) {\r\n    return <p>No movies found.</p>;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"max-w-7xl mx-auto py-7\">\r\n        <div className=\"flex justify-start flex-wrap other:justify-evenly\">\r\n          {movies.map((movie) => (\r\n            <Card key={movie.id} movie={movie} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,MAAMC,SAAS,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAC1C,MAAM;IAAEI,IAAI,EAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGb,QAAQ,CAACQ,OAAO,CAAC;EAC1DP,QAAQ,CAACQ,KAAK,CAAC;;EAEf;EACA,IAAIG,OAAO,EAAE,oBAAOR,OAAA;IAAAU,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC5C,IAAIL,KAAK,EAAE,oBAAOT,OAAA;IAAAU,QAAA,GAAG,SAAO,EAACD,KAAK;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;;EAEvC;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACT,MAAM,CAAC,IAAIA,MAAM,CAACU,MAAM,KAAK,CAAC,EAAE;IACjD,oBAAOjB,OAAA;MAAAU,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EAEA,oBACEd,OAAA;IAAAU,QAAA,eACEV,OAAA;MAASkB,SAAS,EAAC,wBAAwB;MAAAR,QAAA,eACzCV,OAAA;QAAKkB,SAAS,EAAC,mDAAmD;QAAAR,QAAA,EAC/DH,MAAM,CAACY,GAAG,CAAEC,KAAK,iBAChBpB,OAAA,CAACF,IAAI;UAAgBsB,KAAK,EAAEA;QAAM,GAAvBA,KAAK,CAACC,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEX,CAAC;AAACX,EAAA,CAxBWF,SAAS;EAAA,QACqBL,QAAQ,EACjDC,QAAQ;AAAA;AAAAyB,EAAA,GAFGrB,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}